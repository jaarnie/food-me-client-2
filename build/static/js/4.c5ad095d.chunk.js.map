{"version":3,"sources":["../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","components/Filter/Filter.jsx","containers/ListContainer/ListContainer.jsx"],"names":["FormGroup","React","forwardRef","props","ref","classes","className","_props$row","row","other","_objectWithoutProperties","createElement","_extends","clsx","root","withStyles","display","flexDirection","flexWrap","name","GreenCheckbox","justifyContent","color","MAIN_COLOUR","checked","Checkbox","Filter","setChecked","handleChange","event","target","style","FormControlLabel","control","vegetarian","onChange","value","label","vegan","defaultProps","memo","RestaurantCard","lazy","useStyles","makeStyles","flexGrow","state","useContext","Store","useState","vegetarianRestaurants","veganRestaurants","filter","setFilter","useEffect","vegetariantArray","veganArray","restaurants","map","r","restaurant","highlights","includes","push","setDefaultSearch","useCallback","Grid","container","spacing","index","item","xs","sm","key","setVegetarianSearch","setVeganSearch","showRestaurants","Suspense","fallback","Loading"],"mappings":"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","file":"static/js/4.c5ad095d.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport { MAIN_COLOUR } from '../../constants/index'\n\nconst GreenCheckbox = withStyles({\n  root: {\n    justifyContent: 'center',\n    color: MAIN_COLOUR,\n    '&$checked': {\n      color: MAIN_COLOUR,\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />)\n\n// eslint-disable-next-line react/prop-types\nconst Filter = ({ checked, setChecked }) => {\n  const handleChange = (name) => (event) => {\n    setChecked({ ...checked, [name]: event.target.checked })\n  }\n\n  return (\n    <FormGroup\n      row\n      style={{\n        justifyContent: 'center',\n      }}\n    >\n      <FormControlLabel\n        control={\n          <GreenCheckbox\n            checked={checked.vegetarian}\n            onChange={handleChange('vegetarian')}\n            value=\"vegetarian\"\n          />\n        }\n        label=\"Vegetarian Friendly\"\n      />\n      <FormControlLabel\n        control={\n          <GreenCheckbox checked={checked.vegan} onChange={handleChange('vegan')} value=\"vegan\" />\n        }\n        label=\"Vegan Friendly\"\n      />\n    </FormGroup>\n  )\n}\n\nFilter.defaultProps = {\n  checked: {},\n  setChecked: () => {},\n}\n\nFilter.propTypes = {\n  checked: PropTypes.objectOf(PropTypes.bool),\n  setChecked: PropTypes.func,\n}\n\nexport default React.memo(Filter)\n","import React, { useContext, useState, useEffect, useCallback } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\n\nimport { Store } from '../../Store'\n\nimport { Loading } from '../../components/Loading/Loading'\nimport Filter from '../../components/Filter/Filter'\n\nconst RestaurantCard = React.lazy(() => import('../../components/RestaurantCard/RestaurantCard'))\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n}))\n\nconst ListContainer = () => {\n  const classes = useStyles()\n  const { state } = useContext(Store)\n  const [checked, setChecked] = useState({\n    vegan: false,\n    vegetarian: false,\n  })\n  const [filter, setFilter] = useState({\n    vegetarianRestaurants: null,\n    veganRestaurants: null,\n  })\n\n  useEffect(() => {\n    const vegetariantArray = []\n    const veganArray = []\n    state.restaurants.map((r) => {\n      const vegetarian = r.restaurant.highlights.includes('Vegetarian Friendly')\n      const vegan = r.restaurant.highlights.includes('Vegan Options')\n\n      if (vegetarian) {\n        vegetariantArray.push(r)\n      }\n\n      if (vegan) {\n        veganArray.push(r)\n      }\n\n      return setFilter({\n        vegetarianRestaurants: vegetariantArray,\n        veganRestaurants: veganArray,\n      })\n    })\n  }, [state.restaurants])\n\n  const setDefaultSearch = useCallback(() => {\n    return (\n      <Grid container spacing={2}>\n        {state.restaurants.map((restaurant, index) => (\n          <Grid item xs={12} sm={6} key={index}>\n            <RestaurantCard r={restaurant} />\n          </Grid>\n        ))}\n      </Grid>\n    )\n  }, [state.restaurants])\n\n  const setVegetarianSearch = useCallback(() => {\n    return (\n      <Grid container spacing={2}>\n        {filter.vegetarianRestaurants.map((restaurant, index) => (\n          <Grid item xs={12} sm={6} key={index}>\n            <RestaurantCard r={restaurant} />\n          </Grid>\n        ))}\n      </Grid>\n    )\n  }, [filter.vegetarianRestaurants])\n\n  const setVeganSearch = useCallback(() => {\n    return (\n      <Grid container spacing={2}>\n        {filter.veganRestaurants.map((restaurant, index) => (\n          <Grid item xs={12} sm={6} key={index}>\n            <RestaurantCard r={restaurant} />\n          </Grid>\n        ))}\n      </Grid>\n    )\n  }, [filter.veganRestaurants])\n\n  const showRestaurants = useCallback(() => {\n    let restaurants = setDefaultSearch()\n    if (checked.vegetarian) {\n      restaurants = setVegetarianSearch()\n    } else if (checked.vegan) {\n      restaurants = setVeganSearch()\n    }\n    return restaurants\n  }, [checked.vegan, checked.vegetarian, setDefaultSearch, setVeganSearch, setVegetarianSearch])\n\n  return (\n    <div className={classes.root}>\n      <Filter checked={checked} setChecked={setChecked} />\n      <React.Suspense fallback={Loading()}>{showRestaurants()}</React.Suspense>\n    </div>\n  )\n}\n\nexport default React.memo(ListContainer)\n"],"sourceRoot":""}